if [[ "$ZPROF" = true ]]; then
  zmodload zsh/zprof
fi

stty -ixon

autoload -Uz compinit
compinit

bindkey -e

export LC_ALL="en_US.UTF-8"
export LANG="en_US.UTF-8"

export EDITOR='vim'
export VISUAL='vim'

# Setup history
. ~/dotfiles/zsh/hist

# Setup PATH
. ~/dotfiles/zsh/paths

# Setup zsh styles
. ~/dotfiles/zsh/zstyles

# Setup CDPATH for directory completion
. ~/dotfiles/zsh/cdpath

# Setup Prompt
. ~/dotfiles/zsh/pristine_prompt

# Setup functions
. ~/dotfiles/zsh/funcs

# Setup aliases
. ~/dotfiles/zsh/aliases

# Setup bindkeys
. ~/dotfiles/zsh/bindkeys

# TERM with at least 256 colors (24 bit on supported terminals)
export TERM=xterm-256color

# Add cabal bins to PATH
if [ -d ~/.cabal/bin ]; then
  export PATH=$HOME/.cabal/bin:$PATH
fi

# cassandra
if [ -d "$HOME/cassandra" ]; then
  export CASSANDRA_HOME=~/cassandra
  export PATH=$CASSANDRA_HOME/bin:$PATH
fi

# go lang
if [ $+commands[go] ]; then
  export GOPATH=$HOME/code/go
  export PATH=$GOPATH/bin:/usr/local/go/bin:$PATH
fi

platform=$(uname | awk '{print tolower($0)}')
if [[ "$platform" == "darwin" ]]; then
  export ANDROID_NDK_HOME="/usr/local/share/android-ndk"
  export ANDROID_SDK_HOME="/usr/local/share/android-sdk"
fi

function kubectl() {
  if ! type __start_kubectl >/dev/null 2>&1; then
    source <(command kubectl completion zsh)
  fi

  command kubectl "$@"
}

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/usr/local/Caskroom/google-cloud-sdk/latest/path.zsh.inc' ]; then
  source '/usr/local/Caskroom/google-cloud-sdk/latest/path.zsh.inc'
fi

# The next line enables shell command completion for gcloud.
if [ -f '/usr/local/Caskroom/google-cloud-sdk/latest/completion.zsh.inc' ]; then
  source '/usr/local/Caskroom/google-cloud-sdk/latest/completion.zsh.inc'
fi

if [ -d "$HOME/.asdf" ]; then
  . "$HOME/.asdf/asdf.sh"
  . "$HOME/.asdf/completions/asdf.bash"
fi

if [[ "$ZPROF" = true ]]; then
  zprof
fi

if [ $+commands[direnv] ]; then
  eval "$(direnv hook zsh)"
fi

_cd_hook () {
  if [ -f "$OLDPWD/.zshrc.exit" ]; then
    echo "dirsh: unloading"
    source "$OLDPWD/.zshrc.exit" 2>/dev/null
  fi
  # builtin cd "$@" || return
  if [ -f "$PWD/.zshrc.enter" ]; then
    echo "dirsh: loading .zshrc.enter"
    source "$PWD/.zshrc.enter" 2>/dev/null
  fi
}
typeset -ag precmd_functions;
if [[ -z ${precmd_functions[(r)_cd_hook]} ]]; then
  precmd_functions+=_cd_hook
fi
