# Behave like screen
unbind-key C-b
set-option -g prefix C-Space
bind-key Space send-prefix

# Helpers
bind-key C-Space last-window # Press C-a C-a quickly to switch to last window
bind-key r source-file ~/.tmux.conf \; display-message 'source-file done' # Reload tmux configuration

# default-path Hack
bind-key c new-window -c "#{pane_current_path}"

# Move tmux windows
# bind-key -r M-Left swap-window -t -1 # Move window left
# bind-key -r M-Right swap-window -t +1 # Move window right
bind-key -r M-Left swap-window -t -1\; select-window -t -1
bind-key -r M-Right swap-window -t +1\; select-window -t +1

# Basic Options
set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g set-titles on
set-option -g bell-action any
set-option -g visual-bell off
set-option -g renumber-windows on
set-option -g history-limit 3000
set-window-option -g automatic-rename on

# Enable mouse
set-window-option -g mouse on

# Integration with zsh & make it look nice with colors
set-option -g default-shell $SHELL
set-option -g default-terminal 'tmux'
# Enable italics support within tmux
# REF: https://github.com/tmux/tmux/issues/435
set-option -ga terminal-overrides ',xterm-256color:Tc,xterm*:sitm=\E[3m'

# Act like vim
set-option -gs escape-time 0
set-window-option -g mode-keys vi
set-window-option -g xterm-keys on
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R
# bind-key s split-window -v
bind-key s split-window -v -c "#{pane_current_path}"
# bind-key v split-window -h
bind-key v split-window -h -c "#{pane_current_path}"
bind-key -r > resize-pane -R 10
bind-key -r < resize-pane -L 10
bind-key -r + resize-pane -D 10
bind-key -r - resize-pane -U 10

# vim copy mode rebinds for (tmux 2.4+)
# https://shapeshed.com/custom-vim-bindings-in-tmux-2-4/
# https://github.com/tmux/tmux/issues/754#issuecomment-303156000
# https://stackoverflow.com/a/40902312
# Note: rectangle-toggle (aka Visual Block Mode) > hit v then C-v to trigger it
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  'bind-key -T copy-mode-vi v send-keys -X begin-selection; \
  bind-key -T copy-mode-vi V send-keys -X select-line; \
  bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle; \
  bind-key -T choice-mode-vi h send-keys -X tree-collapse ; \
  bind-key -T choice-mode-vi l send-keys -X tree-expand ; \
  bind-key -T choice-mode-vi H send-keys -X tree-collapse-all ; \
  bind-key -T choice-mode-vi L send-keys -X tree-expand-all ; \
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -in -selection clipboard"; \
  bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -in -selection clipboard"'

# vim copy mode rebinds for (tmux 2.3 or lower)
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  'bind-key -t vi-copy v begin-selection; \
  bind-key -t vi-copy V select-line; \
  bind-key -t vi-copy C-v rectangle-toggle; \
  bind-key -t vi-choice h tree-collapse; \
  bind-key -t vi-choice l tree-expand; \
  bind-key -t vi-choice H tree-collapse-all; \
  bind-key -t vi-choice L tree-expand-all; \
  bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "xclip -in -selection clipboard"; \
  bind-key -t vi-copy y copy-pipe "xclip -in -selection clipboard"'

bind C-l command-prompt -p "link-window" "link-window -a -s %%"
bind C-w link-window -a -s oss:1
bind C-u unlink-window

# displays *
bind-key * list-clients
bind-key - choose-session

# Helpful commands
bind / command-prompt -p "man" "new-window 'exec man %%'"
bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'" # Open a ssh session in a new window with input host

# Join pane into a new split in current window
bind-key C-j command-prompt -p "join pane from:" "join-pane -h -s '%%'"
bind-key C-s command-prompt -p "send pane to:" "join-pane -h -t '%%'"

# Message bar
set-window-option -g message-style fg=blue,bright,bg=black,bright
set-option -g display-time 2000
set-option -g display-panes-time 2000

# Window mode bar
set-window-option -g mode-style fg=black,bg=white

set-option -g window-style 'fg=colour247,bg=colour234'
set-option -g window-active-style 'fg=colour250,bg=black'

# Pane status bar
set-option -g pane-border-status top
set-option -g pane-border-style "bg=colour234"
set-option -g pane-active-border-style "fg=red,bg=black"

set-option -g pane-border-format "#[fg=green][#[fg=blue]%d-%m-%Y #[fg=yellow]%H:%M:#[fg=colour22]%S#[fg=green] #[fg=red]%Z#[fg=green]]"
set-option -ag pane-border-format "#[fg=green][#[fg=blue]#(tdate "America/New_York")#[fg=green]]"

# Statusline
set-option -g status on
set-option -g status-style "bg=colour233"
set-option -g status-interval 5

set-option -g status-left '#[fg=green][#[fg=cyan]#S#[fg=blue]:#H#[fg=green]]'
set-option -g status-left-length 25

set-option -g status-right "#[fg=green][#[fg=blue]#(battery_status)#[fg=green]]"
set-option -ag status-right "#[fg=green][#[fg=blue]#(uptime | sed 's/.*up//' | sed 's/,.*//' | sed 's/^ *//') â†‘#[fg=green]]"
set-option -ag status-right "#[fg=green][#[fg=red]#(uptime | sed 's/.*load average.*: //' | sed 's/,//g')#[fg=green]]"
set-option -g status-right-length 95

set-option -g window-status-style "fg=colour250"
set-option -g window-status-format ' #I:#W#F '
set-option -g window-status-separator '|'
set-option -g window-status-current-style "bg=colour250,fg=black"
set-option -g window-status-current-format ' #I:#W#F '

# Clock Mode
set-option -g clock-mode-style 24

# Events
set-option -g focus-events on

if-shell 'test "$(uname)" = "Darwin"' 'source ~/dotfiles/tmux-osx.conf'
if-shell 'test "$(uname)" = "Linux"' 'source ~/dotfiles/tmux-linux.conf'
